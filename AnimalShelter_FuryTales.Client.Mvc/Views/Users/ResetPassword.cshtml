@model UsersResetPasswordViewModel


<h2>Reset Password</h2>
<div class="row">
    <div class="col-md-4">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <form asp-action="ResetPassword" method="post">
            <input asp-for="Token" type="hidden"/>
            <input asp-for="Email" type="hidden"/>
            <input asp-for="Id" type="hidden"/>

            <div class="form-group">
                <label asp-for="NewPassword"></label>
                <input asp-for="NewPassword" class="form-control"/>
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ConfirmPassword"></label>
                <input asp-for="ConfirmPassword" class="form-control"/>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary mt-2" data-send-login="True">Reset Password</button>
        </form>
    </div>
</div>
@*<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form');
        form.addEventListener('submit', function (event) {
            // Voorkom de standaard 'submit' actie totdat het gevalideerd is
            event.preventDefault();

            // Voer de validatie uit
            if (form.checkValidity()) {
                alert('Your password is being reset. Please wait for the process to complete.');
                // Stuur het formulier programmatisch als het geldig is
                form.submit();
            } else {
                // Forceer de browser om de validatie foutmeldingen te tonen
                form.classList.add('was-validated');
            }
        });
    });
</script>*@



